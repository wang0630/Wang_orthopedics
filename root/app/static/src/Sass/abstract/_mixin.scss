@mixin dimension($height:100%, $width:100%) {
  height:$height;
  width:$width;
}

@mixin flex-hor($jus:flex-start, $ali:flex-start) {
  display: flex;
  align-items: $ali;
  justify-content: $jus;
}

@mixin flex-ver($jus:flex-start, $ali:flex-start) {
  display: flex;
  flex-direction: column;
  align-items: $ali;
  justify-content: $jus;
}

@mixin grid-child($row, $column){
  grid: {
    row:$row;
    column:$column;
  }
}

@mixin grid-self($jus:auto, $ali:auto){
  // auto: Default. The element inherits its parent container's align-items property, or "stretch" if it has no parent container
  align-self: $ali;
  justify-self: $jus;
}

@mixin grid-parent($trow, $tcol) {
  display: grid;
  grid: {
    template-rows:$trow;
    template-columns:$tcol;
  }
}

@mixin grid-items($jus-items:stretch, $ali-items:stretch) {
  align-items: $ali-items;
  justify-items: $jus-items;
}

// ------------------- Layout ---------------------------
@mixin overall-layout($page, $componentsCountWithoutMedia, $componentsCountWithMedia) {
  display: grid;
  @if $page == "main" {
    grid-template-rows: 80vh repeat($componentsCountWithoutMedia, min-content);
  } @else {
    // For login main page
    grid-template-rows: minmax(65vh, min-content) 35vh;
  }
  grid-template-columns: unquote("[full-start] minmax(4rem,1fr) [center-start] repeat(8,[col-start] minmax(min-content,14rem) [col-end]) [center-end] minmax(4rem,1fr) [full-end]");
  @include respond(break-alpha, $componentsCountWithMedia) {
    /*
      We cannot access $componentsCountWithMedia inside here since it is a @content block of @mixin respond,
      Mixin does not pass any argumenets to the @content block,
      So (1) we pass $componentsCountWithMedia to respond first
    */
    // grid-template-rows: repeat($componentsCountWithMedia , min-content);
  }
}

// ------------------- Media query ----------------------
$break-alpha: calc-em-media(1132);
$break-beta: calc-em-media(850);
$break-theata: calc-em-media(547);
@mixin respond($breakpoint, $c: null){
  // Here (2) We set a local variable of $componentsCountWithMedia
  $componentsCountWithMedia: $c;

  @if $breakpoint == "break-alpha"{
    // Then here the @content can access it
    @media only screen and (max-width: $break-alpha){ @content };
  }
  @if $breakpoint == "break-beta"{
    @media only screen and (max-width: $break-beta){ @content };
  }
  @if $breakpoint == "break-theata"{
    @media only screen and (max-width: $break-theata){ @content };
  }
}

// ------------------- Animation ----------------------

@mixin animation-move-down {
  opacity: 0;
  animation: moveInDown .85s linear .3s forwards;
}

@mixin animation-move-right {
  opacity: 0;
  animation: moveInRight .85s linear .5s forwards;
}
