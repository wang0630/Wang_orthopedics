{% extends "base/base.jinja2" %}
{% block head %}
  {{ super() }}
  <script src="https://unpkg.com/axios/dist/axios.min.js" async></script>
{% endblock %}
{% block body %}
  <section class="login-main">
    {% include "components/announcement.jinja2" %}
    {% include "login/announcementsForm.jinja2" %}
  </section>
{% endblock %}

{% block myScript %}
  {% assets "js-main" %}
    <script type="application/javascript" src="{{ ASSET_URL }}"></script>
  {% endassets %}
  {% assets "js-mutation-observer" %}
    <script type="application/javascript" src="{{ ASSET_URL }}"></script>
  {% endassets %}
  {% assets "js-announcements" %}
    <script type="application/javascript" src="{{ ASSET_URL }}"></script>
  {% endassets %}
  <script type="application/javascript">
    const announcements = {{ announcements | tojson }};
    const ac_per_page = {{ ac_per_page }};
    const ip = {{ request_ip | tojson }};

    const pagination = new Pagination(announcements, ac_per_page, true);
    
    // Recieve idMapping from pagination
    // ex. index = 0, 1 ... and return the id of that announcement
    const aop = new AnnouncementsOperation(pagination.idMapping, ip);

    // Create observer to invoke callback whenever announcements are rendered properly
    const obs = new AnnouncementsObserver(aop.deleteAnnouncement);
    obs.createObsAndWatch();
    
    // Render the page
    pagination.renderInit();
    pagination.addPagination();
  </script>
{% endblock %}